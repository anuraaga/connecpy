[project]
name = "connecpy"
version = "2.0.0"
description = "Code generator, server library and client library for the Connect Protocol"
authors = [{ name = "Yasushi Itoh" }]
requires-python = ">= 3.10"
dependencies = ["httpx", "protobuf"]
readme = "README.md"
license-files = ["LICENSE"]

[tool.uv]
dev-dependencies = [
    "asgiref",
    "brotli",
    "connecpy-example",
    "flask",
    "mkdocs",
    "mkdocs-material",
    "mkdocstrings[python]",
    "pip>=24.0",
    "pyright[nodejs]",
    "pytest>=8.3.4",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.4",
    "zstandard",
]

[build-system]
requires = ["uv_build>=0.7.21,<0.8.0"]
build-backend = "uv_build"

[tool.pytest.ini_options]
testpaths = ["test"]

[tool.ruff.lint]
extend-select = [
    # Same order as listed on https://docs.astral.sh/ruff/rules/
    "YTT",
    # TODO: Enable after adding more type annotations
    # "ANN",
    "ASYNC",
    "S",
    "FBT",
    "B",
    "A",
    "COM818", # Other comma rules are handled by formatting
    "C4",
    "DTZ",
    "T10",
]

# Document reasons for ignoring specific linting errors
extend-ignore = [
    # Not applicable
    "AIR",
    # Dangerous false positives https://github.com/astral-sh/ruff/issues/4845
    "ERA",
    # Not Applicable
    "FAST",
    # Important to call user callbacks safely
    "BLE",
    # stdlib includes a module named code. This is less of an issue since users need to import a module so allow it
    "A005",
    # TODO: Consider using copyright headers
    "CPY",
]

[tool.ruff.lint.per-file-ignores]
"example/**" = [
    "S", # Keep examples simpler, e.g. allow normal random
]
"**/test_*.py" = ["S101", "S603", "S607", "FBT"]

[tool.ruff]
# Don't run ruff on generated code from external plugins.
extend-exclude = ["*_pb2.py", "*_pb2.pyi"]

[tool.pyright]
exclude = [
    # Defaults.
    "**/node_modules",
    "**/__pycache__",
    "**/.*",

    # GRPC python files don't typecheck on their own.
    # See https://github.com/grpc/grpc/issues/39555
    "**/*_pb2_grpc.py",

    # TODO: Work out the import issues to allow it to work.
    "conformance/**",
]

[tool.uv.workspace]
members = ["conformance", "example", "noextras"]

[tool.uv.sources]
connecpy = { workspace = true }
connecpy-example = { workspace = true }
