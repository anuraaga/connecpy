# -*- coding: utf-8 -*-
# Generated by https://github.com/i2y/connecpy/protoc-gen-connecpy.  DO NOT EDIT!
# source: example/haberdasher.proto

from typing import Optional, Protocol, Union

import httpx

from connecpy.async_client import AsyncConnecpyClient
from connecpy.base import Endpoint
from connecpy.errors import Errors
from connecpy.exceptions import ConnecpyServerException
from connecpy.server import ConnecpyServer
from connecpy.client import ConnecpyClient
from connecpy.context import ServiceContext
from connecpy.types import Headers
import example.haberdasher_pb2 as example_dot_haberdasher__pb2
import google.protobuf.empty_pb2 as google_dot_protobuf_dot_empty__pb2


class Haberdasher(Protocol):
    async def MakeHat(
        self, req: example_dot_haberdasher__pb2.Size, ctx: ServiceContext
    ) -> example_dot_haberdasher__pb2.Hat:
        raise ConnecpyServerException(
            code=Errors.Unimplemented, message="Not implemented"
        )

    async def DoNothing(
        self, req: google_dot_protobuf_dot_empty__pb2.Empty, ctx: ServiceContext
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnecpyServerException(
            code=Errors.Unimplemented, message="Not implemented"
        )


class HaberdasherServer(ConnecpyServer):
    def __init__(self, *, service: Haberdasher, server_path_prefix=""):
        super().__init__()
        self._prefix = f"{server_path_prefix}/i2y.connecpy.example.Haberdasher"
        self._endpoints = {
            "MakeHat": Endpoint[
                example_dot_haberdasher__pb2.Size, example_dot_haberdasher__pb2.Hat
            ](
                service_name="Haberdasher",
                name="MakeHat",
                function=getattr(service, "MakeHat"),
                input=example_dot_haberdasher__pb2.Size,
                output=example_dot_haberdasher__pb2.Hat,
                allowed_methods=("GET", "POST"),
            ),
            "DoNothing": Endpoint[
                google_dot_protobuf_dot_empty__pb2.Empty,
                google_dot_protobuf_dot_empty__pb2.Empty,
            ](
                service_name="Haberdasher",
                name="DoNothing",
                function=getattr(service, "DoNothing"),
                input=google_dot_protobuf_dot_empty__pb2.Empty,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                allowed_methods=("POST",),
            ),
        }

    def serviceName(self):
        return "i2y.connecpy.example.Haberdasher"


class HaberdasherSync(Protocol):
    def MakeHat(
        self, req: example_dot_haberdasher__pb2.Size, ctx: ServiceContext
    ) -> example_dot_haberdasher__pb2.Hat:
        raise ConnecpyServerException(
            code=Errors.Unimplemented, message="Not implemented"
        )

    def DoNothing(
        self, req: google_dot_protobuf_dot_empty__pb2.Empty, ctx: ServiceContext
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        raise ConnecpyServerException(
            code=Errors.Unimplemented, message="Not implemented"
        )


class HaberdasherServerSync(ConnecpyServer):
    def __init__(self, *, service: HaberdasherSync, server_path_prefix=""):
        super().__init__()
        self._prefix = f"{server_path_prefix}/i2y.connecpy.example.Haberdasher"
        self._endpoints = {
            "MakeHat": Endpoint[
                example_dot_haberdasher__pb2.Size, example_dot_haberdasher__pb2.Hat
            ](
                service_name="Haberdasher",
                name="MakeHat",
                function=getattr(service, "MakeHat"),
                input=example_dot_haberdasher__pb2.Size,
                output=example_dot_haberdasher__pb2.Hat,
                allowed_methods=("GET", "POST"),
            ),
            "DoNothing": Endpoint[
                google_dot_protobuf_dot_empty__pb2.Empty,
                google_dot_protobuf_dot_empty__pb2.Empty,
            ](
                service_name="Haberdasher",
                name="DoNothing",
                function=getattr(service, "DoNothing"),
                input=google_dot_protobuf_dot_empty__pb2.Empty,
                output=google_dot_protobuf_dot_empty__pb2.Empty,
                allowed_methods=("POST",),
            ),
        }

    def serviceName(self):
        return "i2y.connecpy.example.Haberdasher"


class HaberdasherClient(ConnecpyClient):
    def MakeHat(
        self,
        request: example_dot_haberdasher__pb2.Size,
        *,
        headers: Optional[Headers] = None,
        timeout_ms: Optional[int] = None,
        server_path_prefix: str = "",
        use_get: bool = False,
    ) -> example_dot_haberdasher__pb2.Hat:
        method = "GET" if use_get else "POST"
        return self._make_request(
            url=f"{server_path_prefix}/i2y.connecpy.example.Haberdasher/MakeHat",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=example_dot_haberdasher__pb2.Hat,
        )

    def DoNothing(
        self,
        request: google_dot_protobuf_dot_empty__pb2.Empty,
        *,
        headers: Optional[Headers] = None,
        timeout_ms: Optional[int] = None,
        server_path_prefix: str = "",
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        method = "POST"
        return self._make_request(
            url=f"{server_path_prefix}/i2y.connecpy.example.Haberdasher/DoNothing",
            method=method,
            headers=headers,
            timeout_ms=timeout_ms,
            request=request,
            response_class=google_dot_protobuf_dot_empty__pb2.Empty,
        )


class AsyncHaberdasherClient(AsyncConnecpyClient):
    async def MakeHat(
        self,
        request: example_dot_haberdasher__pb2.Size,
        *,
        headers: Optional[Headers] = None,
        timeout_ms: Optional[int] = None,
        server_path_prefix: str = "",
        session: Union[httpx.AsyncClient, None] = None,
        use_get: bool = False,
    ) -> example_dot_haberdasher__pb2.Hat:
        method = "GET" if use_get else "POST"
        return await self._make_request(
            url=f"{server_path_prefix}/i2y.connecpy.example.Haberdasher/MakeHat",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=example_dot_haberdasher__pb2.Hat,
            session=session,
        )

    async def DoNothing(
        self,
        request: google_dot_protobuf_dot_empty__pb2.Empty,
        *,
        headers: Optional[Headers] = None,
        timeout_ms: Optional[int] = None,
        server_path_prefix: str = "",
        session: Union[httpx.AsyncClient, None] = None,
    ) -> google_dot_protobuf_dot_empty__pb2.Empty:
        method = "POST"
        return await self._make_request(
            url=f"{server_path_prefix}/i2y.connecpy.example.Haberdasher/DoNothing",
            method=method,
            headers=headers,
            request=request,
            timeout_ms=timeout_ms,
            response_class=google_dot_protobuf_dot_empty__pb2.Empty,
            session=session,
        )
